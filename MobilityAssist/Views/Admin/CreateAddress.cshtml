@model MobilityAssist.Models.Address

@{
    ViewBag.Title = "CreateAddress";
}
@{
    var streets = ViewData["streets"] as SelectList;
}

<h2>Створити адресу</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Адреса</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.address_numb, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address_numb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address_numb, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.street_id, "street_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("street_id", streets, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.street_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.is_adaptated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.is_adaptated)
                    @Html.ValidationMessageFor(model => model.is_adaptated, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address_coordx, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address_coordx, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address_coordx, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address_coordy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address_coordy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address_coordy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Створити" class="btn btn-dark" style="margin-top:12px"/>
            </div>
        </div>
    </div>
}

<a type="button" href="@Url.Action("AdminViewAddresses", "Admin")" class="btn btn-light" style="margin-top:12px">Повернутись</a>
